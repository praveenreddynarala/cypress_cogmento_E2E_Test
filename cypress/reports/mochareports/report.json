{
  "stats": {
    "suites": 10,
    "tests": 44,
    "passes": 42,
    "pending": 0,
    "failures": 2,
    "start": "2020-11-12T16:23:04.627Z",
    "end": "2020-11-12T16:24:14.574Z",
    "duration": 17077,
    "testsRegistered": 44,
    "passPercent": 95.45454545454545,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "26961f46-eea3-4119-9597-524290d3b5bb",
      "title": "",
      "fullFile": "cypress\\integration\\mockAPI_examples\\mock_post_delete_calls.js",
      "file": "cypress\\integration\\mockAPI_examples\\mock_post_delete_calls.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "41eb6c3a-da6f-42ad-b369-5676c414d6a7",
          "title": "Mock POST calls",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create new resource",
              "fullTitle": "Mock POST calls Create new resource",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: Cypress.env('mock_url') + '/users',\n  headers: {\n    'Content-type': 'application/json'\n  },\n  body: {\n    \"name\": \"Praveen\",\n    \"surname\": \"Narala\"\n  }\n}).as('request');\ncy.get('@request').then(function (response) {\n  if (response.status === 201) {\n    cy.log(response.body.id);\n    created_resource_id = response.body.id;\n  }\n});",
              "err": {},
              "uuid": "78227474-8c81-4e45-9fbe-883e5d19f4d1",
              "parentUUID": "41eb6c3a-da6f-42ad-b369-5676c414d6a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete created resource",
              "fullTitle": "Mock POST calls Delete created resource",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: Cypress.env('mock_url') + '/users/' + created_resource_id,\n  headers: {\n    'Content-type': 'application/json'\n  }\n}).as('request');\ncy.get('@request').its('status').should('equal', 200);",
              "err": {},
              "uuid": "ab5dfd4b-73b6-44c8-9c07-09501643ed16",
              "parentUUID": "41eb6c3a-da6f-42ad-b369-5676c414d6a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78227474-8c81-4e45-9fbe-883e5d19f4d1",
            "ab5dfd4b-73b6-44c8-9c07-09501643ed16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "20d42027-8424-40a0-9a7f-2292af2e4596",
      "title": "",
      "fullFile": "cypress\\integration\\restAPI\\delete_requests\\delete_calls.js",
      "file": "cypress\\integration\\restAPI\\delete_requests\\delete_calls.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b58d4c28-ba59-4de2-b61f-51eec78cd3c0",
          "title": "Delete Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete resource",
              "fullTitle": "Delete Requests Delete resource",
              "timedOut": null,
              "duration": 351,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: Cypress.env('reqres_url') + '/api/users/2'\n}).then(function (response) {\n  expect(response.status).equal(204);\n});",
              "err": {},
              "uuid": "e5296ed8-10fc-4ff0-bc4e-0bd80265aef0",
              "parentUUID": "b58d4c28-ba59-4de2-b61f-51eec78cd3c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e5296ed8-10fc-4ff0-bc4e-0bd80265aef0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 351,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "34ba5550-7beb-4551-ae5b-da3717aa020d",
      "title": "",
      "fullFile": "cypress\\integration\\restAPI\\get_requests\\get_calls_using_barear_tocken.js",
      "file": "cypress\\integration\\restAPI\\get_requests\\get_calls_using_barear_tocken.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "56eddd60-2dea-4d3b-bd4b-de2df360a7bb",
          "title": "GET calls using Barear Authentication Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check status code for all users",
              "fullTitle": "GET calls using Barear Authentication Tests Check status code for all users",
              "timedOut": null,
              "duration": 1188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@request').its('status').should('equal', 200);",
              "err": {},
              "uuid": "e7eeb903-6928-435b-9b6e-20f339662e58",
              "parentUUID": "56eddd60-2dea-4d3b-bd4b-de2df360a7bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check status code for all users",
              "fullTitle": "GET calls using Barear Authentication Tests Check status code for all users",
              "timedOut": null,
              "duration": 276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@request').then(function (response) {\n  cy.writeFile('cypress/fixtures/save_responses/seved_response.json', response.body);\n  cy.readFile('cypress/fixtures/save_responses/seved_response.json').then(function (json_data) {\n    cy.log(json_data.code);\n    expect(json_data.code).equal(200);\n  });\n});",
              "err": {},
              "uuid": "5879050f-5aa6-4bad-bc39-c2dd46c890f8",
              "parentUUID": "56eddd60-2dea-4d3b-bd4b-de2df360a7bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e7eeb903-6928-435b-9b6e-20f339662e58",
            "5879050f-5aa6-4bad-bc39-c2dd46c890f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1464,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "af31f784-fdbe-424d-8767-fe2271ba131f",
          "title": "Optional Query Parameter tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check expected response",
              "fullTitle": "Optional Query Parameter tests Check expected response",
              "timedOut": null,
              "duration": 768,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('@request1').its('body').its('data').then(function (response) {\n  cy.log(JSON.stringify(response));\n  expect(response[0].email).equal('bhagwanti_gowda@waelchi.org');\n});",
              "err": {
                "message": "AssertionError: expected 'khatri_suryakantam@borer.net' to equal 'bhagwanti_gowda@waelchi.org'",
                "estack": "AssertionError: expected 'khatri_suryakantam@borer.net' to equal 'bhagwanti_gowda@waelchi.org'\n    at Context.eval (http://localhost:63206/__cypress/tests?p=cypress\\integration\\restAPI\\get_requests\\get_calls_using_barear_tocken.js:146:33)",
                "diff": "- 'khatri_suryakantam@borer.net'\n+ 'bhagwanti_gowda@waelchi.org'\n"
              },
              "uuid": "b91a958e-6370-416c-ae6f-75b5e47ea4d6",
              "parentUUID": "af31f784-fdbe-424d-8767-fe2271ba131f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b91a958e-6370-416c-ae6f-75b5e47ea4d6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 768,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0435e9a2-25b3-4ad9-a2e7-850aa0cfd63d",
      "title": "",
      "fullFile": "cypress\\integration\\restAPI\\get_requests\\get_calls_using_basic_auth.js",
      "file": "cypress\\integration\\restAPI\\get_requests\\get_calls_using_basic_auth.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e2c9ac00-8848-4be5-99e9-0535b085763c",
          "title": "GET calls using Basic Authentication Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get all repos",
              "fullTitle": "GET calls using Basic Authentication Tests Get all repos",
              "timedOut": null,
              "duration": 782,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@request').then(function ($response) {\n  expect($response.status).equal(200);\n  expect($response.body).to.be.not[\"null\"];\n  expect($response.body[0].name).equal('Appium');\n  expect($response.body[0].owner.url).equal('https://api.github.com/users/praveenreddynarala');\n});",
              "err": {},
              "uuid": "7661ce9c-afb6-42ac-bc02-f3737089da67",
              "parentUUID": "e2c9ac00-8848-4be5-99e9-0535b085763c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7661ce9c-afb6-42ac-bc02-f3737089da67"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 782,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "471d746a-ac75-4674-9f50-9d064f806bd1",
      "title": "",
      "fullFile": "cypress\\integration\\restAPI\\get_requests\\get_positive_negative_calls.js",
      "file": "cypress\\integration\\restAPI\\get_requests\\get_positive_negative_calls.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d99d0220-b90d-472f-a235-ea797ed01d4c",
          "title": "Reqres.in API - Get Call Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check response code",
              "fullTitle": "Reqres.in API - Get Call Requests Check response code",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@users').its('status').should('equal', 200);",
              "err": {},
              "uuid": "7902102e-cfa2-43c1-b1df-496e79273ed4",
              "parentUUID": "d99d0220-b90d-472f-a235-ea797ed01d4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check its conetent type",
              "fullTitle": "Reqres.in API - Get Call Requests Check its conetent type",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@users').its('headers').its('content-type').should('include', 'application/json; charset=utf-8');",
              "err": {},
              "uuid": "7d80c167-2689-4674-84e9-a14abcdf7f38",
              "parentUUID": "d99d0220-b90d-472f-a235-ea797ed01d4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get length of the response body",
              "fullTitle": "Reqres.in API - Get Call Requests Get length of the response body",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@users').its('body').its('data').then(function (data) {\n  cy.log(data.length);\n});",
              "err": {},
              "uuid": "8fad07a6-215b-4528-815a-0a697bf02a1d",
              "parentUUID": "d99d0220-b90d-472f-a235-ea797ed01d4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check length of the response body",
              "fullTitle": "Reqres.in API - Get Call Requests Check length of the response body",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@users').its('body').its('data').should('have.length', 6);",
              "err": {},
              "uuid": "320b84ea-06c7-4e39-8e6e-ce90a403352b",
              "parentUUID": "d99d0220-b90d-472f-a235-ea797ed01d4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Expect response body should not be null",
              "fullTitle": "Reqres.in API - Get Call Requests Expect response body should not be null",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@users').its('body').should('not.be.null');",
              "err": {},
              "uuid": "88c0b8e8-e777-45f9-9062-7c950dfb0116",
              "parentUUID": "d99d0220-b90d-472f-a235-ea797ed01d4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check total pages in response",
              "fullTitle": "Reqres.in API - Get Call Requests Check total pages in response",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@users').its('body').its('total_pages').should('equal', 2);",
              "err": {},
              "uuid": "a38d8fc9-fcc5-4881-a329-3eec01ebcbff",
              "parentUUID": "d99d0220-b90d-472f-a235-ea797ed01d4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check response body",
              "fullTitle": "Reqres.in API - Get Call Requests Check response body",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@users').then(function ($response) {\n  cy.log($response.body.data);\n  cy.log($response.body.data[0]);\n  cy.log($response.body.data[0].first_name);\n  expect($response.status).equal(200);\n  expect($response.body.data[0].first_name).equal('Michael');\n  expect($response.body).to.not.be[\"null\"];\n  expect($response.body.data).to.have.length(6);\n});",
              "err": {},
              "uuid": "3d1b96c4-8777-4ede-8bca-25c2fc2d4cb3",
              "parentUUID": "d99d0220-b90d-472f-a235-ea797ed01d4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Print complete response body as JSON string",
              "fullTitle": "Reqres.in API - Get Call Requests Print complete response body as JSON string",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@users').its('body').then(function ($expected_response) {\n  cy.log(JSON.stringify($expected_response));\n});",
              "err": {},
              "uuid": "7fd8fc75-4aae-4fcf-aa45-0fb18da591b3",
              "parentUUID": "d99d0220-b90d-472f-a235-ea797ed01d4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check actual response body legth againist expected json response length",
              "fullTitle": "Reqres.in API - Get Call Requests Check actual response body legth againist expected json response length",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('get_reqres_response.json').as('actual_response');\nvar actual_resp;\ncy.get('@actual_response').its('data').then(function (actual) {\n  cy.log(\"There are \".concat(actual.length, \" admins.\"));\n  actual_resp = actual.length;\n});\ncy.get('@users').its('body').its('data').then(function ($expected_response) {\n  cy.log(JSON.stringify($expected_response));\n  cy.log($expected_response.length);\n  expect($expected_response).to.have.lengthOf(actual_resp);\n});",
              "err": {},
              "uuid": "4c2cf9ef-5156-4f14-8232-d0435321702a",
              "parentUUID": "d99d0220-b90d-472f-a235-ea797ed01d4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check actual response body againist expected json response",
              "fullTitle": "Reqres.in API - Get Call Requests Check actual response body againist expected json response",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('get_reqres_response.json').as('actual_response');\nvar actual_resp;\ncy.get('@actual_response').then(function (actual) {\n  cy.log(actual);\n  actual_resp = actual;\n});\ncy.get('@users').its('body').then(function (expected_resp) {\n  cy.wrap(expected_resp).should('deep.equal', actual_resp);\n});",
              "err": {},
              "uuid": "4da4672a-5fa8-42a1-affa-0a74423ba590",
              "parentUUID": "d99d0220-b90d-472f-a235-ea797ed01d4c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7902102e-cfa2-43c1-b1df-496e79273ed4",
            "7d80c167-2689-4674-84e9-a14abcdf7f38",
            "8fad07a6-215b-4528-815a-0a697bf02a1d",
            "320b84ea-06c7-4e39-8e6e-ce90a403352b",
            "88c0b8e8-e777-45f9-9062-7c950dfb0116",
            "a38d8fc9-fcc5-4881-a329-3eec01ebcbff",
            "3d1b96c4-8777-4ede-8bca-25c2fc2d4cb3",
            "7fd8fc75-4aae-4fcf-aa45-0fb18da591b3",
            "4c2cf9ef-5156-4f14-8232-d0435321702a",
            "4da4672a-5fa8-42a1-affa-0a74423ba590"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 950,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "300bcfd4-5041-497b-900c-817bb320a04b",
          "title": "GET negative calls",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Single user not found",
              "fullTitle": "GET negative calls Single user not found",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: Cypress.env('reqres_url') + '/api/users/23',\n  headers: {\n    'accept': 'application/json'\n  },\n  failOnStatusCode: false //fail on status code if we remove this option or set to true\n}).then(function ($response) {\n  expect($response.status).equal(404);\n});",
              "err": {},
              "uuid": "161b8102-965e-46db-b28d-666a786890cd",
              "parentUUID": "300bcfd4-5041-497b-900c-817bb320a04b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Single resource not found",
              "fullTitle": "GET negative calls Single resource not found",
              "timedOut": null,
              "duration": 452,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: '/api/unknown/23',\n  headers: {\n    'accept': 'application/json'\n  },\n  failOnStatusCode: false //fail on status code if we remove this option or set to true\n}).then(function ($response) {\n  expect($response.status).equal(404);\n});",
              "err": {
                "message": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request\n    at Context.request (http://localhost:63206/__cypress/runner/cypress_runner.js:158797:19)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:63206/__cypress/tests?p=cypress\\integration\\restAPI\\get_requests\\get_positive_negative_calls.js:191:8)",
                "diff": null
              },
              "uuid": "87d4e11b-ad60-4311-b22e-183198b47439",
              "parentUUID": "300bcfd4-5041-497b-900c-817bb320a04b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "161b8102-965e-46db-b28d-666a786890cd"
          ],
          "failures": [
            "87d4e11b-ad60-4311-b22e-183198b47439"
          ],
          "pending": [],
          "skipped": [],
          "duration": 543,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "763b8d02-24c0-40eb-ad03-838a42d2751c",
          "title": "Check delayed response",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delay Response",
              "fullTitle": "Check delayed response Delay Response",
              "timedOut": null,
              "duration": 3156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: Cypress.env('reqres_url') + '/api/users?delay=3',\n  headers: {\n    'accept': 'application/json'\n  },\n  failOnStatusCode: false //fail on status code if we remove this option or set to true\n}).then(function ($response) {\n  expect($response.status).equal(200);\n});",
              "err": {},
              "uuid": "8b17ad6d-06b8-4c51-9ec8-7bcbac9b5a55",
              "parentUUID": "763b8d02-24c0-40eb-ad03-838a42d2751c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b17ad6d-06b8-4c51-9ec8-7bcbac9b5a55"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3156,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ec9d2483-2789-4610-89db-58963a01f263",
      "title": "",
      "fullFile": "cypress\\integration\\restAPI\\github_e2e_tests\\github_e2e_tests.js",
      "file": "cypress\\integration\\restAPI\\github_e2e_tests\\github_e2e_tests.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0c854884-93b4-4af8-866d-98454eda3560",
          "title": "GitHub E2E Test Workflow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create new repository",
              "fullTitle": "GitHub E2E Test Workflow Create new repository",
              "timedOut": null,
              "duration": 2095,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: Cypress.env('github_url') + '/user/repos',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  headers: {\n    'Content-type': 'application/json'\n  },\n  body: {\n    \"name\": new_repo_name,\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": false,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n  }\n}).then(function (response) {\n  expect(response.status).equal(201);\n});",
              "err": {},
              "uuid": "b1cf7736-70de-450d-a91e-7039801b469b",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check created repository",
              "fullTitle": "GitHub E2E Test Workflow Check created repository",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name,\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  headers: {\n    'Content-type': 'application/json'\n  }\n}).then(function (response) {\n  if (response.status === 200) {\n    cy.wrap(response).its('body').should('include', {\n      \"name\": new_repo_name\n    });\n  } else {\n    cy.log('No repository exists!' + response.status);\n  }\n});",
              "err": {},
              "uuid": "bebac17f-8e7b-4d26-812f-26135dd5d577",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get content of new repository",
              "fullTitle": "GitHub E2E Test Workflow Get content of new repository",
              "timedOut": null,
              "duration": 474,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name + '/contents',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  headers: {\n    'Content-type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(function (response) {\n  if (response.status === 404) {\n    cy.wrap(response).its('body').should('include', {\n      \"message\": \"This repository is empty.\"\n    });\n  } else {\n    cy.log('Failed to verify api request' + response.status);\n  }\n});",
              "err": {},
              "uuid": "b2981e4a-66f9-4442-ae69-ec884f5dc1ea",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create a file in repository",
              "fullTitle": "GitHub E2E Test Workflow Create a file in repository",
              "timedOut": null,
              "duration": 942,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PUT',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name + '/contents/README.md',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  body: {\n    \"message\": \"my first commit message\",\n    \"committer\": {\n      \"name\": \"Praveen Reddy Narala\",\n      \"email\": \"praveenreddy.narala@gmail.com\"\n    },\n    \"content\": \"SGVsbG8sIFdvcmxk\"\n  }\n}).then(function (response) {\n  if (response.status == 201) {\n    cy.wrap(response).its('body.content').should('include', {\n      \"name\": \"README.md\"\n    });\n    cy.wrap(response).its('body.commit.author').should('include', {\n      \"name\": \"Praveen Reddy Narala\"\n    });\n    cy.wrap(response).its('body.commit').should('include', {\n      \"message\": \"my first commit message\"\n    });\n    cy.wrap(response).its('body.content.sha').then(function (sha) {\n      sha_code = sha;\n    });\n  }\n});",
              "err": {},
              "uuid": "0b6bf780-c3af-4adb-ae39-4034bf705ef2",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Write content to READ.md file",
              "fullTitle": "GitHub E2E Test Workflow Write content to READ.md file",
              "timedOut": null,
              "duration": 882,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PUT',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name + '/contents/README.md',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  body: {\n    \"message\": \"my commit message\",\n    \"committer\": {\n      \"name\": \"Monalisa Octocat\",\n      \"email\": \"octocat@github.com\"\n    },\n    \"content\": \"SGVsbG8gUG9zdG1hbi4gSG93IGRvIHlvdSBkbz8=\",\n    \"sha\": sha_code\n  }\n}).then(function (response) {\n  expect(response.status).equal(200);\n  cy.wrap(response).its('body.content.sha').then(function (sha) {\n    sha_code = sha;\n  });\n});",
              "err": {},
              "uuid": "c7f21f61-ff72-4076-876a-cac00655edf1",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete READ.md file",
              "fullTitle": "GitHub E2E Test Workflow Delete READ.md file",
              "timedOut": null,
              "duration": 820,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name + '/contents/README.md',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  body: {\n    \"message\": \"delete file\",\n    \"committer\": {\n      \"name\": \"Praveen Reddy Narala\",\n      \"email\": \"praveenreddy.narala@gmail.com\"\n    },\n    \"sha\": sha_code\n  }\n}).then(function (response) {\n  expect(response.status).equal(200);\n  expect(response.body.content).to.be[\"null\"];\n});",
              "err": {},
              "uuid": "98e3436b-be96-43d3-b5d6-3ce1cae4a9c6",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Make repository to private",
              "fullTitle": "GitHub E2E Test Workflow Make repository to private",
              "timedOut": null,
              "duration": 791,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PATCH',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name,\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  body: {\n    \"name\": \"Hello-World\",\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n  }\n}).then(function (response) {\n  expect(response.status).equal(200);\n  expect(response.body[\"private\"]).to.be[\"true\"];\n});",
              "err": {},
              "uuid": "9b7f7b93-85f5-4b20-be5f-fd8020343537",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete repository",
              "fullTitle": "GitHub E2E Test Workflow Delete repository",
              "timedOut": null,
              "duration": 606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name,\n  auth: {\n    user: Cypress.env('auth_username'),\n    password: Cypress.env('auth_password')\n  }\n}).then(function (response) {\n  expect(response.status).equal(204);\n});",
              "err": {},
              "uuid": "9ee1439d-f7bb-4189-ad0e-b97c459c63b1",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1cf7736-70de-450d-a91e-7039801b469b",
            "bebac17f-8e7b-4d26-812f-26135dd5d577",
            "b2981e4a-66f9-4442-ae69-ec884f5dc1ea",
            "0b6bf780-c3af-4adb-ae39-4034bf705ef2",
            "c7f21f61-ff72-4076-876a-cac00655edf1",
            "98e3436b-be96-43d3-b5d6-3ce1cae4a9c6",
            "9b7f7b93-85f5-4b20-be5f-fd8020343537",
            "9ee1439d-f7bb-4189-ad0e-b97c459c63b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6892,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b6505b72-a329-4d7a-862f-e1bad5eac192",
      "title": "",
      "fullFile": "cypress\\integration\\restAPI\\patch_requests\\patch_calls.js",
      "file": "cypress\\integration\\restAPI\\patch_requests\\patch_calls.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "86b78868-dcec-417a-9515-8619eafc3bb8",
          "title": "Patch Update Calls",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check status",
              "fullTitle": "Patch Update Calls Check status",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@request').then(function (response) {\n  cy.log(JSON.stringify(response));\n  cy.log(JSON.stringify(response.headers));\n  cy.log(JSON.stringify(response.body));\n  cy.log(JSON.stringify(response.body.name));\n  expect(response.status).equal(200);\n});",
              "err": {},
              "uuid": "002c2a8f-a363-4fd1-b6fe-0761ad46f1e5",
              "parentUUID": "86b78868-dcec-417a-9515-8619eafc3bb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check updated record using Should command",
              "fullTitle": "Patch Update Calls Check updated record using Should command",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@request').its('body').should('include', {\n  \"name\": \"morpheus\",\n  \"job\": \"zion resident\"\n});",
              "err": {},
              "uuid": "39e61a8b-6bf4-486b-bb3c-dbbfd8215c04",
              "parentUUID": "86b78868-dcec-417a-9515-8619eafc3bb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check update record",
              "fullTitle": "Patch Update Calls Check update record",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@request').its('body').then(function (response) {\n  expect(response).to.have.property('name', response.name);\n  expect(response).to.have.property('job', response.job);\n});",
              "err": {},
              "uuid": "4e12d450-730a-4993-877b-dcd23bb18d31",
              "parentUUID": "86b78868-dcec-417a-9515-8619eafc3bb8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "002c2a8f-a363-4fd1-b6fe-0761ad46f1e5",
            "39e61a8b-6bf4-486b-bb3c-dbbfd8215c04",
            "4e12d450-730a-4993-877b-dcd23bb18d31"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 489,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6a830c93-e804-4c97-97b2-133f4588eb6d",
      "title": "",
      "fullFile": "cypress\\integration\\restAPI\\post_requests\\post_calls.js",
      "file": "cypress\\integration\\restAPI\\post_requests\\post_calls.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "99efb94a-1a56-4281-a597-a7dab183fe53",
          "title": "POST requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check post status",
              "fullTitle": "POST requests Check post status",
              "timedOut": null,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@request').then(function ($response) {\n  expect($response.status).equal(201);\n  cy.log(JSON.stringify($response.body));\n  cy.log($response.body);\n});",
              "err": {},
              "uuid": "c7947bc6-9546-4351-8da1-68ed68b9c221",
              "parentUUID": "99efb94a-1a56-4281-a597-a7dab183fe53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check post response body",
              "fullTitle": "POST requests Check post response body",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@request').its('body').then(function (expected) {\n  cy.log(JSON.stringify(expected));\n  cy.wrap(expected).should('include', {\n    \"name\": \"morpheus\"\n  });\n});",
              "err": {},
              "uuid": "f865dac1-ade9-4335-94d1-ac15597b468d",
              "parentUUID": "99efb94a-1a56-4281-a597-a7dab183fe53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7947bc6-9546-4351-8da1-68ed68b9c221",
            "f865dac1-ade9-4335-94d1-ac15597b468d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 315,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0a02e240-8859-4196-9093-0dfddfd673bb",
          "title": "REGISTER - SUCCESSFUL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check Registration Successfull",
              "fullTitle": "REGISTER - SUCCESSFUL Check Registration Successfull",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@request').then(function (response) {\n  expect(response.status).equal(200);\n  cy.log(JSON.stringify(response.body));\n});",
              "err": {},
              "uuid": "d5abca9d-86ab-4e41-a756-df7c2d77269f",
              "parentUUID": "0a02e240-8859-4196-9093-0dfddfd673bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check response body",
              "fullTitle": "REGISTER - SUCCESSFUL Check response body",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var actual_resp;\ncy.fixture('post_reqres_response.json').then(function (actual) {\n  actual_resp = actual;\n});\ncy.get('@request').its('body').then(function (expected) {\n  expect(expected).to.deep.equal(actual_resp);\n});",
              "err": {},
              "uuid": "428402f3-e839-46e4-8d22-55eb79f64b6e",
              "parentUUID": "0a02e240-8859-4196-9093-0dfddfd673bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5abca9d-86ab-4e41-a756-df7c2d77269f",
            "428402f3-e839-46e4-8d22-55eb79f64b6e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8844af9f-8926-430f-97fe-9ad2e74b7073",
          "title": "Missing required data from POST body checks",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Missing required data Password filed from POST body checks",
              "fullTitle": "Missing required data from POST body checks Missing required data Password filed from POST body checks",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: Cypress.env('reqres_url') + '/api/register',\n  body: {\n    \"email\": \"sydney@fife\"\n  },\n  failOnStatusCode: false\n}).as('request');\ncy.get('@request').then(function (response) {\n  expect(response.status).equal(400);\n  expect(response.body).to.deep.equals({\n    error: 'Missing password'\n  });\n});",
              "err": {},
              "uuid": "642e8d84-9e94-4db3-a9ce-7870cd7cdda6",
              "parentUUID": "8844af9f-8926-430f-97fe-9ad2e74b7073",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "642e8d84-9e94-4db3-a9ce-7870cd7cdda6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 141,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b1435f58-3bc0-4201-b6b3-a4d9c7416b36",
      "title": "",
      "fullFile": "cypress\\integration\\restAPI\\put_requests\\put_calls.js",
      "file": "cypress\\integration\\restAPI\\put_requests\\put_calls.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9cafcb1e-865c-47b6-b6bc-4d103d1bffbe",
          "title": "Patch Update Calls",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check status",
              "fullTitle": "Patch Update Calls Check status",
              "timedOut": null,
              "duration": 180,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@request').then(function (response) {\n  cy.log(JSON.stringify(response));\n  cy.log(JSON.stringify(response.headers));\n  cy.log(JSON.stringify(response.body));\n  cy.log(JSON.stringify(response.body.name));\n  expect(response.status).equal(200);\n});",
              "err": {},
              "uuid": "7092ec5b-cd46-483f-9704-a0cdcce3aef1",
              "parentUUID": "9cafcb1e-865c-47b6-b6bc-4d103d1bffbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check updated record using Should command",
              "fullTitle": "Patch Update Calls Check updated record using Should command",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@request').its('body').should('include', {\n  \"name\": \"morpheus\",\n  \"job\": \"zion resident\"\n});",
              "err": {},
              "uuid": "46361b5e-fc57-4043-883a-5f6887690d93",
              "parentUUID": "9cafcb1e-865c-47b6-b6bc-4d103d1bffbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check update record",
              "fullTitle": "Patch Update Calls Check update record",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@request').its('body').then(function (response) {\n  expect(response).to.have.property('name', response.name);\n  expect(response).to.have.property('job', response.job);\n});",
              "err": {},
              "uuid": "e42378e0-64e9-4e1d-84df-e9093ab113f2",
              "parentUUID": "9cafcb1e-865c-47b6-b6bc-4d103d1bffbe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7092ec5b-cd46-483f-9704-a0cdcce3aef1",
            "46361b5e-fc57-4043-883a-5f6887690d93",
            "e42378e0-64e9-4e1d-84df-e9093ab113f2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 412,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2e8d6d32-6e1f-41c1-b691-75448a0a1740",
      "title": "",
      "fullFile": "cypress\\integration\\mockAPI_examples\\mock_get_calls.js",
      "file": "cypress\\integration\\mockAPI_examples\\mock_get_calls.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2d7eeca7-47c2-481a-b9e0-b4f2719299ec",
          "title": "Testing mock API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check status code",
              "fullTitle": "Testing mock API Check status code",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@request').then(function (response) {\n  expect(response.status).equal(200);\n  cy.log(JSON.stringify(response.headers));\n});",
              "err": {},
              "uuid": "f91c9dcd-d189-4ec6-b14e-eaf7b2123765",
              "parentUUID": "2d7eeca7-47c2-481a-b9e0-b4f2719299ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get all users",
              "fullTitle": "Testing mock API Get all users",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@request').its('body').then(function (response) {\n  cy.log(JSON.stringify(response[1]));\n  expect(response[1]).deep.equal({\n    \"id\": 2,\n    \"name\": \"Chris\",\n    \"surname\": \"B.\"\n  });\n});",
              "err": {},
              "uuid": "1231958f-42d0-4189-bc5f-f65b211c6eac",
              "parentUUID": "2d7eeca7-47c2-481a-b9e0-b4f2719299ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f91c9dcd-d189-4ec6-b14e-eaf7b2123765",
            "1231958f-42d0-4189-bc5f-f65b211c6eac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "86175ad7-36c4-4b68-b79b-d79c018ae3bb",
          "title": "Test Query parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get user details based on ID",
              "fullTitle": "Test Query parameters Get user details based on ID",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: Cypress.env('mock_url') + '/users/1',\n  headers: {\n    'Content-type': 'application/json'\n  }\n}).as('request');\ncy.get('@request').its('status').should('equal', 200);\ncy.get('@request').its('body').then(function (response) {\n  cy.log(JSON.stringify(response));\n  expect(response).deep.equal({\n    \"id\": 1,\n    \"name\": \"Jonas\",\n    \"surname\": \"T.\"\n  });\n});",
              "err": {},
              "uuid": "0b4fc5f2-76bb-471c-81af-8f6e919be581",
              "parentUUID": "86175ad7-36c4-4b68-b79b-d79c018ae3bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get user using mached characters of name field/Text search",
              "fullTitle": "Test Query parameters Get user using mached characters of name field/Text search",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: Cypress.env('mock_url') + '/users?q=J',\n  headers: {\n    'Content-type': 'application/json'\n  }\n}).as('request');\ncy.get('@request').its('body').then(function (response) {\n  response.forEach(function (element) {\n    expect(element.name).to.be.contains('J');\n  });\n});",
              "err": {},
              "uuid": "2d6313f8-1781-4ef2-854b-a52a3ff78455",
              "parentUUID": "86175ad7-36c4-4b68-b79b-d79c018ae3bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get user using pagination and limit",
              "fullTitle": "Test Query parameters Get user using pagination and limit",
              "timedOut": null,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: Cypress.env('mock_url') + '/users?_page=1&_limit=1',\n  headers: {\n    'Content-type': 'application/json'\n  }\n}).as('request');\ncy.get('@request').its('body').then(function (response) {\n  expect(response.length).to.be.equal(1);\n});",
              "err": {},
              "uuid": "58a3013a-871c-4077-9788-32db4caf5aea",
              "parentUUID": "86175ad7-36c4-4b68-b79b-d79c018ae3bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b4fc5f2-76bb-471c-81af-8f6e919be581",
            "2d6313f8-1781-4ef2-854b-a52a3ff78455",
            "58a3013a-871c-4077-9788-32db4caf5aea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 171,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}