{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2020-11-12T10:46:45.618Z",
    "end": "2020-11-12T10:46:51.589Z",
    "duration": 5971,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3fda2f5c-7dc6-4381-b7c7-133b329b77fd",
      "title": "",
      "fullFile": "cypress\\integration\\restAPI\\github_e2e_tests\\github_e2e_tests.js",
      "file": "cypress\\integration\\restAPI\\github_e2e_tests\\github_e2e_tests.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0afd01e4-bf96-4be6-9783-6687bbb164ba",
          "title": "GitHub E2E Test Workflow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create new repository",
              "fullTitle": "GitHub E2E Test Workflow Create new repository",
              "timedOut": null,
              "duration": 1859,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: Cypress.env('github_url') + '/user/repos',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  headers: {\n    'Content-type': 'application/json'\n  },\n  body: {\n    \"name\": new_repo_name,\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": false,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n  }\n}).then(function (response) {\n  expect(response.status).equal(201);\n});",
              "err": {},
              "uuid": "76092666-4182-4244-8b46-0f7c24cc1d04",
              "parentUUID": "0afd01e4-bf96-4be6-9783-6687bbb164ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check created repository",
              "fullTitle": "GitHub E2E Test Workflow Check created repository",
              "timedOut": null,
              "duration": 209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name,\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  headers: {\n    'Content-type': 'application/json'\n  }\n}).then(function (response) {\n  if (response.status === 200) {\n    cy.wrap(response).its('body').should('include', {\n      \"name\": new_repo_name\n    });\n  } else {\n    cy.log('No repository exists!' + response.status);\n  }\n});",
              "err": {},
              "uuid": "54364eae-ada7-4e07-805c-6e23c4fefa3d",
              "parentUUID": "0afd01e4-bf96-4be6-9783-6687bbb164ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get content of new repository",
              "fullTitle": "GitHub E2E Test Workflow Get content of new repository",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name + '/contents',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  headers: {\n    'Content-type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(function (response) {\n  if (response.status === 404) {\n    cy.wrap(response).its('body').should('include', {\n      \"message\": \"This repository is empty.\"\n    });\n  } else {\n    cy.log('Failed to verify api request' + response.status);\n  }\n});",
              "err": {},
              "uuid": "59a460cc-2ce9-4cae-acae-1e5893e43e69",
              "parentUUID": "0afd01e4-bf96-4be6-9783-6687bbb164ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create a file in repository",
              "fullTitle": "GitHub E2E Test Workflow Create a file in repository",
              "timedOut": null,
              "duration": 899,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PUT',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name + '/contents/README.md',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  body: {\n    \"message\": \"my first commit message\",\n    \"committer\": {\n      \"name\": \"Praveen Reddy Narala\",\n      \"email\": \"praveenreddy.narala@gmail.com\"\n    },\n    \"content\": \"SGVsbG8sIFdvcmxk\"\n  }\n}).then(function (response) {\n  if (response.status == 201) {\n    cy.wrap(response).its('body.content').should('include', {\n      \"name\": \"README.md\"\n    });\n    cy.wrap(response).its('body.commit.author').should('include', {\n      \"name\": \"Praveen Reddy Narala\"\n    });\n    cy.wrap(response).its('body.commit').should('include', {\n      \"message\": \"my first commit message\"\n    });\n    cy.wrap(response).its('body.content.sha').then(function (sha) {\n      sha_code = sha;\n    });\n  }\n});",
              "err": {},
              "uuid": "757353cb-ea9d-4207-95c8-01894f37de47",
              "parentUUID": "0afd01e4-bf96-4be6-9783-6687bbb164ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Write content to READ.md file",
              "fullTitle": "GitHub E2E Test Workflow Write content to READ.md file",
              "timedOut": null,
              "duration": 871,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PUT',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name + '/contents/README.md',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  body: {\n    \"message\": \"my commit message\",\n    \"committer\": {\n      \"name\": \"Monalisa Octocat\",\n      \"email\": \"octocat@github.com\"\n    },\n    \"content\": \"SGVsbG8gUG9zdG1hbi4gSG93IGRvIHlvdSBkbz8=\",\n    \"sha\": sha_code\n  }\n}).then(function (response) {\n  expect(response.status).equal(200);\n  cy.wrap(response).its('body.content.sha').then(function (sha) {\n    sha_code = sha;\n  });\n});",
              "err": {},
              "uuid": "e63d2a33-4957-4bb6-90d3-38094ad9ba03",
              "parentUUID": "0afd01e4-bf96-4be6-9783-6687bbb164ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete READ.md file",
              "fullTitle": "GitHub E2E Test Workflow Delete READ.md file",
              "timedOut": null,
              "duration": 854,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name + '/contents/README.md',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  body: {\n    \"message\": \"delete file\",\n    \"committer\": {\n      \"name\": \"Praveen Reddy Narala\",\n      \"email\": \"praveenreddy.narala@gmail.com\"\n    },\n    \"sha\": sha_code\n  }\n}).then(function (response) {\n  expect(response.status).equal(200);\n  expect(response.body.content).to.be[\"null\"];\n});",
              "err": {},
              "uuid": "a3a53b66-5b95-4c85-ac56-bd9f5e886db9",
              "parentUUID": "0afd01e4-bf96-4be6-9783-6687bbb164ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Make repository to private",
              "fullTitle": "GitHub E2E Test Workflow Make repository to private",
              "timedOut": null,
              "duration": 565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PATCH',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name,\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  body: {\n    \"name\": \"Hello-World\",\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n  }\n}).then(function (response) {\n  expect(response.status).equal(200);\n  expect(response.body[\"private\"]).to.be[\"true\"];\n});",
              "err": {},
              "uuid": "e0266b5d-7090-4b0a-bf17-057ab787cadf",
              "parentUUID": "0afd01e4-bf96-4be6-9783-6687bbb164ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete repository",
              "fullTitle": "GitHub E2E Test Workflow Delete repository",
              "timedOut": null,
              "duration": 452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name,\n  auth: {\n    user: Cypress.env('auth_username'),\n    password: Cypress.env('auth_password')\n  }\n}).then(function (response) {\n  expect(response.status).equal(204);\n});",
              "err": {},
              "uuid": "59d1838a-7b3c-4409-a4f5-e2a92e52f89d",
              "parentUUID": "0afd01e4-bf96-4be6-9783-6687bbb164ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "76092666-4182-4244-8b46-0f7c24cc1d04",
            "54364eae-ada7-4e07-805c-6e23c4fefa3d",
            "59a460cc-2ce9-4cae-acae-1e5893e43e69",
            "757353cb-ea9d-4207-95c8-01894f37de47",
            "e63d2a33-4957-4bb6-90d3-38094ad9ba03",
            "a3a53b66-5b95-4c85-ac56-bd9f5e886db9",
            "e0266b5d-7090-4b0a-bf17-057ab787cadf",
            "59d1838a-7b3c-4409-a4f5-e2a92e52f89d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5919,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true,
        "charts": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "5.1.0"
    }
  }
}