{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2020-11-12T16:23:46.406Z",
    "end": "2020-11-12T16:23:53.421Z",
    "duration": 7015,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ec9d2483-2789-4610-89db-58963a01f263",
      "title": "",
      "fullFile": "cypress\\integration\\restAPI\\github_e2e_tests\\github_e2e_tests.js",
      "file": "cypress\\integration\\restAPI\\github_e2e_tests\\github_e2e_tests.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0c854884-93b4-4af8-866d-98454eda3560",
          "title": "GitHub E2E Test Workflow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create new repository",
              "fullTitle": "GitHub E2E Test Workflow Create new repository",
              "timedOut": null,
              "duration": 2095,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: Cypress.env('github_url') + '/user/repos',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  headers: {\n    'Content-type': 'application/json'\n  },\n  body: {\n    \"name\": new_repo_name,\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": false,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n  }\n}).then(function (response) {\n  expect(response.status).equal(201);\n});",
              "err": {},
              "uuid": "b1cf7736-70de-450d-a91e-7039801b469b",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check created repository",
              "fullTitle": "GitHub E2E Test Workflow Check created repository",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name,\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  headers: {\n    'Content-type': 'application/json'\n  }\n}).then(function (response) {\n  if (response.status === 200) {\n    cy.wrap(response).its('body').should('include', {\n      \"name\": new_repo_name\n    });\n  } else {\n    cy.log('No repository exists!' + response.status);\n  }\n});",
              "err": {},
              "uuid": "bebac17f-8e7b-4d26-812f-26135dd5d577",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get content of new repository",
              "fullTitle": "GitHub E2E Test Workflow Get content of new repository",
              "timedOut": null,
              "duration": 474,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name + '/contents',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  headers: {\n    'Content-type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(function (response) {\n  if (response.status === 404) {\n    cy.wrap(response).its('body').should('include', {\n      \"message\": \"This repository is empty.\"\n    });\n  } else {\n    cy.log('Failed to verify api request' + response.status);\n  }\n});",
              "err": {},
              "uuid": "b2981e4a-66f9-4442-ae69-ec884f5dc1ea",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create a file in repository",
              "fullTitle": "GitHub E2E Test Workflow Create a file in repository",
              "timedOut": null,
              "duration": 942,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PUT',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name + '/contents/README.md',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  body: {\n    \"message\": \"my first commit message\",\n    \"committer\": {\n      \"name\": \"Praveen Reddy Narala\",\n      \"email\": \"praveenreddy.narala@gmail.com\"\n    },\n    \"content\": \"SGVsbG8sIFdvcmxk\"\n  }\n}).then(function (response) {\n  if (response.status == 201) {\n    cy.wrap(response).its('body.content').should('include', {\n      \"name\": \"README.md\"\n    });\n    cy.wrap(response).its('body.commit.author').should('include', {\n      \"name\": \"Praveen Reddy Narala\"\n    });\n    cy.wrap(response).its('body.commit').should('include', {\n      \"message\": \"my first commit message\"\n    });\n    cy.wrap(response).its('body.content.sha').then(function (sha) {\n      sha_code = sha;\n    });\n  }\n});",
              "err": {},
              "uuid": "0b6bf780-c3af-4adb-ae39-4034bf705ef2",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Write content to READ.md file",
              "fullTitle": "GitHub E2E Test Workflow Write content to READ.md file",
              "timedOut": null,
              "duration": 882,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PUT',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name + '/contents/README.md',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  body: {\n    \"message\": \"my commit message\",\n    \"committer\": {\n      \"name\": \"Monalisa Octocat\",\n      \"email\": \"octocat@github.com\"\n    },\n    \"content\": \"SGVsbG8gUG9zdG1hbi4gSG93IGRvIHlvdSBkbz8=\",\n    \"sha\": sha_code\n  }\n}).then(function (response) {\n  expect(response.status).equal(200);\n  cy.wrap(response).its('body.content.sha').then(function (sha) {\n    sha_code = sha;\n  });\n});",
              "err": {},
              "uuid": "c7f21f61-ff72-4076-876a-cac00655edf1",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete READ.md file",
              "fullTitle": "GitHub E2E Test Workflow Delete READ.md file",
              "timedOut": null,
              "duration": 820,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name + '/contents/README.md',\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  body: {\n    \"message\": \"delete file\",\n    \"committer\": {\n      \"name\": \"Praveen Reddy Narala\",\n      \"email\": \"praveenreddy.narala@gmail.com\"\n    },\n    \"sha\": sha_code\n  }\n}).then(function (response) {\n  expect(response.status).equal(200);\n  expect(response.body.content).to.be[\"null\"];\n});",
              "err": {},
              "uuid": "98e3436b-be96-43d3-b5d6-3ce1cae4a9c6",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Make repository to private",
              "fullTitle": "GitHub E2E Test Workflow Make repository to private",
              "timedOut": null,
              "duration": 791,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PATCH',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name,\n  auth: {\n    bearer: Cypress.env('github_bearer_token')\n  },\n  body: {\n    \"name\": \"Hello-World\",\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n  }\n}).then(function (response) {\n  expect(response.status).equal(200);\n  expect(response.body[\"private\"]).to.be[\"true\"];\n});",
              "err": {},
              "uuid": "9b7f7b93-85f5-4b20-be5f-fd8020343537",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete repository",
              "fullTitle": "GitHub E2E Test Workflow Delete repository",
              "timedOut": null,
              "duration": 606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: Cypress.env('github_url') + '/repos/praveenreddynarala/' + new_repo_name,\n  auth: {\n    user: Cypress.env('auth_username'),\n    password: Cypress.env('auth_password')\n  }\n}).then(function (response) {\n  expect(response.status).equal(204);\n});",
              "err": {},
              "uuid": "9ee1439d-f7bb-4189-ad0e-b97c459c63b1",
              "parentUUID": "0c854884-93b4-4af8-866d-98454eda3560",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1cf7736-70de-450d-a91e-7039801b469b",
            "bebac17f-8e7b-4d26-812f-26135dd5d577",
            "b2981e4a-66f9-4442-ae69-ec884f5dc1ea",
            "0b6bf780-c3af-4adb-ae39-4034bf705ef2",
            "c7f21f61-ff72-4076-876a-cac00655edf1",
            "98e3436b-be96-43d3-b5d6-3ce1cae4a9c6",
            "9b7f7b93-85f5-4b20-be5f-fd8020343537",
            "9ee1439d-f7bb-4189-ad0e-b97c459c63b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6892,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}